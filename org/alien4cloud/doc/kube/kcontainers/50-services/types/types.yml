tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.doc.kube.kcontainers.50-services.types
  template_version: 2.2.0-SNAPSHOT
  template_author: alien4cloud

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:3.0.0
  - org.alien4cloud.kubernetes.api:3.1.0
  - org.alien4cloud.doc.kube.kcontainers.pub:2.2.0-SNAPSHOT
  - docker-types:3.0.0
  - alien-base-types:3.0.0

node_types:

  org.alien4cloud.doc.kube.kcontainers.50-services.types.nodes.MyService:
    derived_from: tosca.nodes.Root
    abstract: true
    properties:
      key:
        type: string
    capabilities:
      service_endpoint:
        type: org.alien4cloud.doc.kube.kcontainers.50-services.types.capabilities.ServiceEndpoint

  org.alien4cloud.doc.kube.kcontainers.50-services.types.nodes.MyClient:
    derived_from: org.alien4cloud.kubernetes.api.types.KubeContainer
    properties:
      container:
        type: org.alien4cloud.kubernetes.api.datatypes.ContainerSpec
        default:
          imagePullPolicy: Always
          image: "nginx:1.14-alpine"
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "wget ${SERVER_PROTOCOL}://${SERVER_IP}:${SERVER_PORT}${SERVER_PATH} -O /usr/share/nginx/html/index.html"
    capabilities:
      http_endpoint:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
    requirements:
      - service:
          capability: org.alien4cloud.doc.kube.kcontainers.50-services.types.capabilities.ServiceEndpoint
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]
    interfaces:
      Standard:
        inputs:
          ENV_SERVER_PROTOCOL: { get_property: [TARGET, service, service_endpoint, protocol] }
          ENV_SERVER_IP: { get_attribute: [TARGET, service, service_endpoint, ip_address] }
          ENV_SERVER_PORT: { get_property: [TARGET, service, service_endpoint, port] }
          ENV_SERVER_PATH: { get_property: [TARGET, service, service_endpoint, path] }

capability_types:

  org.alien4cloud.doc.kube.kcontainers.50-services.types.capabilities.ServiceEndpoint:
    derived_from: tosca.capabilities.Endpoint
    properties:
      protocol:
        type: string
      port:
        type: integer
      path:
        type: string
