tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.doc.kube.kcontainers.21-Nginx-cfg.types
  template_version: 2.2.0-SNAPSHOT
  template_author: alien4cloud

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:3.0.0
  - org.alien4cloud.kubernetes.api:3.1.0
  - org.alien4cloud.doc.kube.kcontainers.pub:2.2.0-SNAPSHOT
  - org.alien4cloud.doc.kube.kcontainers.11-Apache-Proxy.types:2.2.0-SNAPSHOT

node_types:

  org.alien4cloud.doc.kube.kcontainers.21-Nginx-cfg.types.nodes.NginxConfigmap:
    derived_from: org.alien4cloud.kubernetes.api.types.KubeConfigurableContainer
    properties:
      container:
        type: org.alien4cloud.kubernetes.api.datatypes.ContainerSpec
        default:
          imagePullPolicy: Always
          image: "nginx:1.14-alpine"
      PortVOSTF:
        type: integer
        default: 88
        required: true  
    capabilities:
      http_ext:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
      http_int:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http   

    interfaces:
      Standard:
        inputs:
          CFG_SECPORT: { get_property: [SELF, PortVOSTF] }
          CFG_AUTRE: "Hi"

  org.alien4cloud.doc.kube.kcontainers.21-Nginx-client.types.nodes.NginxClientApache:
    derived_from: org.alien4cloud.kubernetes.api.types.KubeConfigurableContainer
    properties:
      container:
        type: org.alien4cloud.kubernetes.api.datatypes.ContainerSpec
        default:
          imagePullPolicy: Always
          image: "nginx:1.14-alpine"
      PortVOSTF:
        type: integer
        default: 88
        required: true  
    capabilities:
      http_ext:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
      http_int:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http   
    requirements:
      - server:
          capability: org.alien4cloud.doc.kube.kcontainers.11-Apache-Proxy.types.capabilities.ApacheServer
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]

    interfaces:
      Standard:
        inputs:
          CFG_SECPORT: { get_property: [SELF, PortVOSTF] }
          CFG_SERVER_IP: { get_attribute: [TARGET, server, server_endpoint, ip_address] }
          CFG_SERVER_PORT: { get_property: [TARGET, server, server_endpoint, port] }
          ENV_FULL_URL: { concat: [ "http://", get_attribute: [TARGET, server, server_endpoint, ip_address], ":", get_property: [TARGET, server, server_endpoint, port]] }

          